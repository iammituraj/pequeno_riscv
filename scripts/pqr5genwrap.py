# -------------------- Chipmunk Logic™, https://chipmunklogic.com ---------------------- #
# Script : Micro-script used by Makefile to edit IRAM wrapper wrt IRAM generated by Make
# -------------------- Chipmunk Logic™, https://chipmunklogic.com ---------------------- #

# Import libraries
import sys

# Read all command line arguments, open all reqd. files
fin_path   = sys.argv[1]
gen_module = sys.argv[2]
ram_depth  = sys.argv[3]       
ram_width  = sys.argv[4]      
fin = open(fin_path, "rt")
fout_path = fin_path.replace('\\', '/')
fout_path_l = list(fout_path.split('/'))
fout_path_l [-1] = ''
fout_path = "/".join(fout_path_l) + str(gen_module) + '.sv'
fout = open(fout_path, "wt")

# Source content, destination content
src = fin.read().splitlines()
des = []

# Analyze each line and modify depth and width
for line in src:
	if line.startswith('module'):
		des.append('module ' + gen_module + '#(')    
	elif len(line.split()) > 0 and line.split()[0] == 'parameter' and line.split()[1] == 'DEPTH':
		des.append('   parameter  DEPTH  = ' + str(ram_depth) + ' ,    // Depth of RAM //**AUTOGENERATED**//')
	elif len(line.split()) > 0 and line.split()[0] == 'parameter' and line.split()[1] == 'DATA_W':
		des.append('   parameter  DATA_W = ' + str(ram_width) + ' ,    // Data width //**AUTOGENERATED**//')
	else:
		des.append(line)      

# Write to destination file
for line in des:
	#print(line)
	fout.write(line + '\n')  # Because string list doesn't contain '\n' characters, all trimmed by  splitline()

# Close all files
fin.close()
fout.close()
print ('| GENWRAP: Successfully generated wrapper ...')